import os
import pyaudio
import wave
import threading
import time
from google.cloud import speech_v1p1beta1 as speech
from google.cloud import texttospeech
from ibm_watsonx_ai.foundation_models import Model
from ibm_watsonx_ai.client import APIClient


# Setup IBM Cloud API
def get_credentials():
    return {
        "url": "https://eu-de.ml.cloud.ibm.com",
        "apikey":"EDvWcSDctufqdnk6D25nqpPzvvIWn8sYGlajStDUlfHD" # Replace with your IBM API Key
    }

model_id = "sdaia/allam-1-13b-instruct"
project_id ="1e873aaa-cd09-423f-8c9f-e11aac6ea139" # Replace with your project ID

# Initialize IBM Model
credentials = get_credentials()
model = Model(
    model_id=model_id,
    params={
        "decoding_method": "greedy",
        "max_new_tokens": 900,
        "repetition_penalty": 1
    },
    credentials=credentials,
    project_id=project_id
)

# Setup Google Cloud APIs
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "C:/Users/Asus/Desktop/Mooben/mobeen-439017-d8be3e8adbb5.json"  # Replace with your credentials file

client_speech = speech.SpeechClient()
client_tts = texttospeech.TextToSpeechClient()

# Audio settings
RATE = 16000
CHUNK = 1024
FORMAT = pyaudio.paInt16
CHANNELS = 1

def record_audio(duration=8):
    p = pyaudio.PyAudio()
    stream = p.open(format=FORMAT, channels=CHANNELS, rate=RATE, input=True, frames_per_buffer=CHUNK)
    frames = []

    print("Recording...")

    for _ in range(0, int(RATE / CHUNK * duration)):
        data = stream.read(CHUNK)
        frames.append(data)

    stream.stop_stream()
    stream.close()
    p.terminate()

    wf = wave.open("output.wav", "wb")
    wf.setnchannels(CHANNELS)
    wf.setsampwidth(p.get_sample_size(FORMAT))
    wf.setframerate(RATE)
    wf.writeframes(b''.join(frames))
    wf.close()
    print("Recording complete.")

def transcribe_audio(filename):
    with open(filename, "rb") as audio_file:
        content = audio_file.read()
    audio = speech.RecognitionAudio(content=content)
    config = speech.RecognitionConfig(
        encoding=speech.RecognitionConfig.AudioEncoding.LINEAR16,
        sample_rate_hertz=RATE,
        language_code="ar-SA"  # Change this to your language preference
    )
    response = client_speech.recognize(config=config, audio=audio)
    for result in response.results:
        return result.alternatives[0].transcript

def synthesize_speech(text):
    input_text = texttospeech.SynthesisInput(text=text)
    voice = texttospeech.VoiceSelectionParams(
        language_code="ar-SA",  # Adjust language as needed
        ssml_gender=texttospeech.SsmlVoiceGender.FEMALE
    )
    audio_config = texttospeech.AudioConfig(audio_encoding=texttospeech.AudioEncoding.LINEAR16)
    response = client_tts.synthesize_speech(input=input_text, voice=voice, audio_config=audio_config)

    with open("response.wav", "wb") as out:
        out.write(response.audio_content)

def play_audio(filename):
    p = pyaudio.PyAudio()
    wf = wave.open(filename, 'rb')
    stream = p.open(format=p.get_format_from_width(wf.getsampwidth()),
                    channels=wf.getnchannels(),
                    rate=wf.getframerate(),
                    output=True)

    data = wf.readframes(CHUNK)
    while len(data) > 0:
        stream.write(data)
        data = wf.readframes(CHUNK)

    stream.stop_stream()
    stream.close()
    p.terminate()

def chat_with_model(question):
    prompt_input = """
__grounding__

<<SYS>>
ูุฑุญูุฉ 1:
"ุฃููุงู ูุณููุงู! ูุง ูู ุงุณูู ุงูุฌูููุ ๐ ููู ุนูุฑูุ"

ุจุนุฏ ุฃู ูุฌูุจ ุงูุทูู ุนู ุงุณูู:

ูุฑุญูุฉ 2:
"ุดูุฑุงู ูุง [ุงุณู ุงูุทูู]ุ ุงุณูู ุฌููู! ๐ ูู ุชุญุจ ุงููุบุฉ ุงูุนุฑุจูุฉุ ููุง ูู ุฃูุซุฑ ุดูุก ุชุญุจู ูููุงุ ูู ุชูุถู ุงููุตุตุ ุงูุดุนุฑุ ุฃู ุงูููุงุนุฏุ"

ุจุนุฏ ุฃู ูุฌูุจ ุนู ุงูุชูุงูุงุชู:

ูุฑุญูุฉ 3:
"ุฑุงุฆุน ุฌุฏุงู ูุง [ุงุณู ุงูุทูู]! ๐ ูู ุฃู ูุฏููุฉ ุชุนูุดุ"

ุจุนุฏ ุฃู ูุฐูุฑ ุงููุฏููุฉ:

ูุฑุญูุฉ 4:
ุจูุง ุฃูู ุชุญุจ [ุงูุชูุงู ุงูุทูู]ุ ุณุฃุญูู ูู ูุตุฉ ูููุฏุฉ ูุฃุฎุจุฑูู ูุงุฐุง ุงุณุชูุฏุช ูููุง

ุจุนุฏ ุฃู ูุนุทู ุงููุงุฆุฏุฉ:

ูุฑุญูุฉ 5:
ุฃุญุณูุช! ูุจูุง ุฃูู ุดุงุทุฑ ูุชุญุจ [ุงูุชูุงู ุงูุทูู] ูุชุนูุด ูู [ุงููุฏููุฉ]ุ ุฃูุฏ ุฃู ุฃุฎุจุฑู ุนู ุจุนุถ ุงูุฃูุดุทุฉ ุงูููุชุนุฉุ ููููู ุชุฌุฑุจุฉ [ุงุณู ุงููุดุงุท] ุจุชุงุฑูุฎ [ุชุงุฑูุฎ ุงููุดุงุท]ุ ูุฃูุถุงู [ุงุณู ูุดุงุท ุขุฎุฑ] ุจุชุงุฑูุฎ [ุชุงุฑูุฎ ุงููุดุงุท ุงูุซุงูู]. ุฃุชููู ุฃู ุชุณุชูุชุน ุจูุฐู ุงููุนุงููุงุช!"

ุชูุจูู :
ุชุฃูุฏ ูู ุนุฏู ุงูุงูุชูุงู ุฅูู ุงูุณุคุงู ุงูุชุงูู ุญุชู ูุญุตู ุงููุธุงู ุนูู ุฅุฌุงุจุฉ ุงูุทูู ุนู ุงูุณุคุงู ุงูุญุงูู.
<</SYS>>

 ูุฑุญุจุง [/INST]  ุฃููุงู ูุณููุงู! ูุง ูู ุงุณูู ุงูุฌูููุ ููู ุนูุฑูุ  </s><s> [INST] ุงุณูู ุดููุงุก ูุนูุฑู 10 [/INST]  ุดูุฑุงู ูุง ุดููุงุกุ ุงุณูู ุฌููู! ูู ุชุญุจูู ุงููุบุฉ ุงูุนุฑุจูุฉุ ููุง ูู ุฃูุซุฑ ุดูุก ุชุญุจููู ูููุงุ ูู ุชูุถููู ุงููุตุตุ ุงูุดุนุฑุ ุฃู ุงูููุงุนุฏุ  </s><s> [INST] ูุนูุ ุฃุญุจ ุงููุตุต [/INST]  ุฑุงุฆุน ุฌุฏุงู ูุง ุดููุงุก! ุจูุง ุฃูู ุชุญุจูู ุงููุตุตุ ุณุฃุญูู ูู ูุตุฉ ูููุฏุฉ. ูู ุชุนูููู ุฃู ุงููุตุต ุชุณุงุนุฏูุง ุนูู ุชุนูู ุงูููู ูุงูุฃุฎูุงู ุจุทุฑููุฉ ููุชุนุฉ ูุดููุฉุ

ูู ุฅุญุฏู ุงููุตุตุ ูุงู ููุงู ุตุฏููุงู ูุชูุงูุณุงู ูู ุณุจุงู. ูุงู ุฃุญุฏููุง ุณุฑูุนุงู ูุงูุขุฎุฑ ุตุจูุฑุงู. ูู ุงูููุงูุฉุ ูุงุฒ ุงูุตุฏูู ุงูุตุจูุฑ ูุฃูู ูู ูุณุชุนุฌู ูุงุณุชุฎุฏู ุงุณุชุฑุงุชูุฌูุชู ุจุญููุฉ.

ูุงุฐุง ุชุนููุช ูู ูุฐู ุงููุตุฉ ูุง ุดููุงุกุ ูู ููุงู ุฏุฑุณ ูุนูู ุงุณุชูุฏุชู ูููุงุ  </s><s> [INST] ุงูุตุจุฑ ูุงููุซุงุจุฑุฉ [/INST]  ุฃุญุณูุชู ูุง ุดููุงุก! ุชุนููุชู ุฏุฑุณุงู ูููุงู ูู ุงููุตุฉ ููู ุงูุตุจุฑ ูุงููุซุงุจุฑุฉ. ูุฐู ุงูููู ุชุณุงุนุฏูุง ูู ุชุญููู ุฃูุฏุงููุง ูุงููุฌุงุญ ูู ุญูุงุชูุง.

ูููุง ูุชุนูู ุจุงูุฃูุดุทุฉ ุงููุชุนููุฉ ุจุงููุตุตุ ููููู ุชุฌุฑุจุฉ ูุฑุดุฉ ุชุนููู ุงููุตุต ุงูุชูุงุนููุฉ ุจุชุงุฑูุฎ 1/5/2025 ูู ูุฏููุฉ ุงูุฌุจูู. ุณุชุชุนูู ููุงู ููููุฉ ุชุฃููู ูุตุต ูุจุชูุฑุฉ ูุฌุฐุงุจุฉ.

ุฃูุถุงูุ ููููู ุงููุดุงุฑูุฉ ูู ูุณุงุจูุฉ ูุชุงุจุฉ ุงููุตุต ุงููุตูุฑุฉ ุจุชุงุฑูุฎ 15/4/2025 ูู ูุฏููุฉ ุงูุฑูุงุถ. ุณุชุชุงุญ ูู ุงููุฑุตุฉ ููุชุงุจุฉ ูุตุชู ุงูุฎุงุตุฉ ูุงูุชูุงูุณ ูุน ุงูุฃุทูุงู ุงูุขุฎุฑูู.

ุงุณุชูุชุนู ุจูุฐู ุงููุนุงููุงุช ูุงุณุชูุฑู ูู ุชูููุฉ ููุงุฑุงุชู ูู ูุชุงุจุฉ ุงููุตุต!  </s><s> [INST]"""

    formatted_question = f"<s> [INST] {question} [/INST]"
    prompt = f"{prompt_input}{formatted_question}"
    response = model.generate_text(prompt=prompt, guardrails=False)
    return response

def voice_chat():
    while True:
        print("Listening...")
        record_audio()
        question = transcribe_audio("output.wav")
        print(f"User: {question}")

        response_text = chat_with_model(question)
        print(f"AI: {response_text}")

        synthesize_speech(response_text)
        play_audio("response.wav")

if __name__ == "__main__":
    voice_chat()
